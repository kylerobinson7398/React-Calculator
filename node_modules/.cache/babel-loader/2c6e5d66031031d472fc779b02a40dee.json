{"ast":null,"code":"import _classCallCheck from \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/src/component/App.js\";\nimport React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\"; //starting off the states of the variables as null\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleClick = function (buttonName) {\n      _this.setState(calculate(_this.state, buttonName));\n    };\n\n    _this.state = {\n      total: null,\n      next: null,\n      operation: null\n    };\n    return _this;\n  } // handle click and set state to calculate the values entered \n\n\n  _createClass(App, [{\n    key: \"render\",\n    //display values of 0 and conncet click handler to the button panel\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"component-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Display, {\n        value: this.state.next || this.state.total || \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(ButtonPanel, {\n        clickHandler: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kylerobinson/Desktop/Uft-Assignment/React-Calculator/src/component/App.js"],"names":["React","Display","ButtonPanel","calculate","App","props","handleClick","buttonName","setState","state","total","next","operation","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,WAAP,C,CAEA;;IACMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAUnBC,WAVmB,GAUL,UAAAC,UAAU,EAAI;AAC1B,YAAKC,QAAL,CAAcL,SAAS,CAAC,MAAKM,KAAN,EAAaF,UAAb,CAAvB;AACD,KAZkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAFiB;AAOlB,G,CAED;;;;;AAKA;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,IAAX,IAAmB,KAAKF,KAAL,CAAWC,KAA9B,IAAuC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,YAAY,EAAE,KAAKJ,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAvBeN,KAAK,CAACa,S;;AAyBxB,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\n//starting off the states of the variables as null\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  // handle click and set state to calculate the values entered \n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  //display values of 0 and conncet click handler to the button panel\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}